apiVersion: apps/v1
kind: Deployment
metadata:
  name: bakta-backend
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/part-of: bakta-web
    app.kubernetes.io/version: v0.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: backend
      app.kubernetes.io/part-of: bakta-web
      app.kubernetes.io/version: v0.1.0
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app.kubernetes.io/name: backend
        app.kubernetes.io/part-of: bakta-web
        app.kubernetes.io/version: v0.1.0
    spec:
      containers:
      - env:
        - name: JobContainer
          value: harbor.computational.bio.uni-giessen.de/bakta/bakta-web-job:0.1.0-beta.1 
        - name: BaseKey
          value: data/dev
        - name: DBName
          value: bakta
        - name: DBPort
          value: "3306"
        - name: DBUser
          value: bakta
        - name: DataBucket
          value: baktadata
        - name: DatabaseHost
          value: bakta-mysql.bakta-dev.svc.cluster.local
        - name: GRPC_GO_LOG_SEVERITY_LEVEL
          value: debug
        - name: GRPC_GO_LOG_VERBOSITY_LEVEL
          value: "2"
        - name: InCluster
          value: "true"
        - name: DBPassword
          valueFrom:
            secretKeyRef:
              key: mysql-password
              name: bakta-mysql
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: AccessKey
              name: s3
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: SecretKey
              name: s3
        - name: ApiToken
          valueFrom:
            secretKeyRef:
              key: Token
              name: authhandler
        image: harbor.computational.bio.uni-giessen.de/bakta/bakta-web-backend:0.2.9-beta.10
        imagePullPolicy: Always
        name: baktabackend
        ports:
        - containerPort: 8080
          name: 8080tcp2
          protocol: TCP
        - containerPort: 8081
          name: 8081tcp2
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        - mountPath: /config
          name: config
          readOnly: true
      serviceAccount: bakta-runner
      serviceAccountName: bakta-runner
      volumes:
      - emptyDir: {}
        name: tmp-volume
      - configMap:
          defaultMode: 420
          name: baktabackendconf
        name: config
